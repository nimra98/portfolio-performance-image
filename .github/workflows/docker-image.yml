name: Multiarch Docker Build & Test

on:
  push:
    tags:
      - 'v*'
  workflow_dispatch:
    inputs:
      version:
        description: 'Version fÃ¼r das Docker Image (z.B. 1.2.3)'
        required: true
      latest:
        description: 'Soll ein :latest-Tag gesetzt werden?'
        type: boolean
        default: false

jobs:
  prepare:
    runs-on: ubuntu-latest
    outputs:
      version: ${{ steps.vars.outputs.version }}
      latest: ${{ steps.vars.outputs.latest }}
    steps:
      - id: vars
        run: |
          if [ "${{ github.event_name }}" = "workflow_dispatch" ]; then
            echo "version=${{ github.event.inputs.version }}" >> $GITHUB_OUTPUT
            echo "latest=${{ github.event.inputs.latest }}" >> $GITHUB_OUTPUT
          else
            VERSION="${GITHUB_REF#refs/tags/v}"
            echo "version=$VERSION" >> $GITHUB_OUTPUT
            if [[ "$VERSION" =~ ^[0-9]+\.[0-9]+\.[0-9]+$ ]]; then
              echo "latest=true" >> $GITHUB_OUTPUT
            else
              echo "latest=false" >> $GITHUB_OUTPUT
            fi
          fi

  lint-and-test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        packaging: [pponly, nextcloud, firefox, firefox-nextcloud]
    steps:
      - uses: actions/checkout@v4

      #- name: Dockerfile lint
      #  uses: hadolint/hadolint-action@v3.1.0
      #  with:
      #    dockerfile: ./Dockerfile

      #- name: Docker build test (local, no push)
      #  run: |
      #    docker build \
      #      --build-arg VERSION=dummy \
      #      --build-arg PACKAGING=${{ matrix.packaging }} \
      #      --tag test-${{ matrix.packaging }} \
      #      .

  build:
    needs: [prepare, lint-and-test]
    strategy:
      matrix:
        arch: [amd64, arm64]
        packaging: [pponly, nextcloud, firefox, firefox-nextcloud]
    runs-on: ${{ matrix.arch == 'amd64' && 'ubuntu-latest' || 'ubuntu-24.04-arm' }}
    steps:
      - uses: actions/checkout@v4

      - uses: docker/setup-buildx-action@v3

      - name: Docker login
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Build and push Docker image
        run: |
          IMAGE="nimra98/portfolio-performance"
          VERSION="${{ needs.prepare.outputs.version }}"
          PACKAGING="${{ matrix.packaging }}"
          ARCH="${{ matrix.arch }}"

          TAG="$IMAGE:$PACKAGING-$VERSION"

          docker buildx build \
            --platform "linux/$ARCH" \
            --build-arg VERSION=$VERSION \
            --build-arg PACKAGING=$PACKAGING \
            --tag $TAG \
            --push \
            .

          if [ "${{ needs.prepare.outputs.latest }}" = "true" ]; then
            docker buildx build \
              --platform "linux/$ARCH" \
              --build-arg VERSION=$VERSION \
              --build-arg PACKAGING=$PACKAGING \
              --tag $IMAGE:$PACKAGING \
              --push \
              .
          fi
